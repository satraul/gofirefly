/*
Firefly III API v1.5.4

This is the documentation of the Firefly III API. You can find accompanying documentation on the website of Firefly III itself (see below). Please report any bugs or issues. You may use the \"Authorize\" button to try the API below. This file was last generated on 2021-09-25T14:21:28+00:00

API version: 1.5.4
Contact: james@firefly-iii.org
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package gofirefly

import (
	"encoding/json"
)

// AutocompleteCategory struct for AutocompleteCategory
type AutocompleteCategory struct {
	Id string `json:"id"`
	// Name of the category found by an auto-complete search.
	Name                 string `json:"name"`
	AdditionalProperties map[string]interface{}
}

type _AutocompleteCategory AutocompleteCategory

// NewAutocompleteCategory instantiates a new AutocompleteCategory object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutocompleteCategory(id string, name string) *AutocompleteCategory {
	this := AutocompleteCategory{}
	this.Id = id
	this.Name = name
	return &this
}

// NewAutocompleteCategoryWithDefaults instantiates a new AutocompleteCategory object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutocompleteCategoryWithDefaults() *AutocompleteCategory {
	this := AutocompleteCategory{}
	return &this
}

// GetId returns the Id field value
func (o *AutocompleteCategory) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AutocompleteCategory) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AutocompleteCategory) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *AutocompleteCategory) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AutocompleteCategory) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AutocompleteCategory) SetName(v string) {
	o.Name = v
}

func (o AutocompleteCategory) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *AutocompleteCategory) UnmarshalJSON(bytes []byte) (err error) {
	varAutocompleteCategory := _AutocompleteCategory{}

	if err = json.Unmarshal(bytes, &varAutocompleteCategory); err == nil {
		*o = AutocompleteCategory(varAutocompleteCategory)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAutocompleteCategory struct {
	value *AutocompleteCategory
	isSet bool
}

func (v NullableAutocompleteCategory) Get() *AutocompleteCategory {
	return v.value
}

func (v *NullableAutocompleteCategory) Set(val *AutocompleteCategory) {
	v.value = val
	v.isSet = true
}

func (v NullableAutocompleteCategory) IsSet() bool {
	return v.isSet
}

func (v *NullableAutocompleteCategory) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutocompleteCategory(val *AutocompleteCategory) *NullableAutocompleteCategory {
	return &NullableAutocompleteCategory{value: val, isSet: true}
}

func (v NullableAutocompleteCategory) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutocompleteCategory) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
